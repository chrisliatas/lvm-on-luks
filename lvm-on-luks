#!/bin/bash

noise () {

    # fill luks container partition with noise (takes a long time for larger partitions) http://serverfault.com/a/415962
    openssl enc -aes-256-ctr -pass pass:"$(dd if=/dev/urandom bs=128 count=1 2>/dev/null | base64)" -nosalt < /dev/zero > /dev/$1$2

}

install() {

    ### setup luks

    cryptsetup luksFormat /dev/$1$2
    cryptsetup luksOpen /dev/$1$2 lvm

    ### setup lvm in luks

    pvcreate /dev/mapper/lvm
    vgcreate lvm /dev/mapper/lvm

    lvcreate -n swap -L $3G lvm
    lvcreate -n root -L $4G lvm

    if [ -z "$5" ]
    then
        lvcreate -n home -l 100%FREE lvm
    else
        lvcreate -n home -L $5G lvm
    fi

    # http://stackoverflow.com/a/1885534
    echo
    read -p "Install Ubuntu NOW. Respond AFTER - is /boot encrypted? [y/n]: " -n 1 -r
    echo

    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        
        ### mount and chroot to new install 

        # Mount root partition: 
        mount /dev/mapper/lvm-root /mnt

        # Mount your virtual filesystems:
        for i in /dev /dev/pts /proc /sys /run; do mount -B $i /mnt$i; done

        # chroot to fresh install, copy necessary files, and run postinstall
        cp lvm-on-luks /mnt/lvm-on-luks
        cp crypto_keyfile /mnt/crypto_keyfile   
        chroot /mnt bash lvm-on-luks $1 $2 postinstall

    fi

}

postinstall() {

    ### configure grub 
    
    echo "GRUB_ENABLE_CRYPTODISK=y" >> /etc/default/grub
    echo "GRUB_CMDLINE_LINUX=\"cryptdevice=$(blkid -s UUID -o value /dev/$2$3):lvm\""  >> /etc/default/grub
    grub-mkconfig -o /boot/grub/grub.cfg
    grub-install /dev/$1

    ### add luks to crypttab

    # make a new key and add it to the luks container
    dd bs=512 count=4 if=/dev/urandom of=/crypto_keyfile.bin
    cryptsetup luksAddKey /dev/$1$2 /crypto_keyfile.bin

    # copy the script which will add the key file to initram and make executable
    cp crypto_keyfile /etc/initramfs-tools/hooks/crypto_keyfile
    chmod +x /etc/initramfs-tools/hooks/crypto_keyfile

    # update cryptab with uuid of drive and details for keyfile decryption
    echo "lvm UUID=$(blkid -s UUID -o value /dev/$1$2) /crypto_keyfile.bin luks,keyscript=/bin/cat" > /etc/crypttab

    # update ramdisk
    update-initramfs -u

    ### cleanup and secure new boot and keyfile. run in new install

    chmod 000 /crypto_keyfile.bin
    chmod -R g-rwx,o-rwx /boot

    # remove ubiquity if its still there due to crash installer crash (?)
    apt-get -y remove ubiquity

    rm lvm-on-luks crypto_keyfile

}

if [[ $EUID -ne 0 ]]
then
    echo "sudo bash lvm-on-luks <disk: sdx> <partition: y> noise"
    echo "sudo bash lvm-on-luks <disk: sdx> <partition: y> install <swap size / G> <root size / G> [home size / G - default remaining]"
    exit
fi

if [ $3 == "noise" ]
then
    noise $1 $2
fi

if [ $3 == "install" ]
then
    install $1 $2 $4 $5 $6
fi

if [ $3 == "postinstall" ]
then
    postinstall $1 $2
fi